group 'extreme'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'idea'

sourceCompatibility = 8

repositories {
    mavenCentral()
}

def JUNIT5_API_VERSION = '5.8.2'
def JUNIT5_PLATFORM_VERSION = '1.8.2'
def JUNIT5_MOCKITO_VERSION = '4.2.0'

def JUNIT4_VERSION = '4.12'
def JUNIT4_MOCKITO_VERSION = '2.19.0'


ext.libs = [
        junit4: [
                "junit:junit:${JUNIT4_VERSION}",
                "org.mockito:mockito-core:${JUNIT4_MOCKITO_VERSION}"
        ],
        junit5: [
                "org.junit.jupiter:junit-jupiter-api:${JUNIT5_API_VERSION}",
                "org.junit.jupiter:junit-jupiter-engine:${JUNIT5_API_VERSION}",
                "org.junit.vintage:junit-vintage-engine:${JUNIT5_API_VERSION}",
                "org.junit.jupiter:junit-jupiter-params:${JUNIT5_API_VERSION}",
                "org.junit.platform:junit-platform-launcher:${JUNIT5_PLATFORM_VERSION}",
                "org.junit.platform:junit-platform-runner:${JUNIT5_PLATFORM_VERSION}",
                "org.mockito:mockito-junit-jupiter:${JUNIT5_MOCKITO_VERSION}"
        ]
]

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
        afterSuite { desc, result ->
            if (!desc.parent) {
                def output = " Result: ${result.resultType} " +
                        "(${result.testCount} Tests, " +
                        "${result.successfulTestCount} Successes, " +
                        "${result.failedTestCount} Failures, " +
                        "${result.skippedTestCount} Skipped) "
                println('\n' + ('-' * output.length()) + '\n' + output + '\n' + ('-' * output.length()))
            }
        }
    }
}

dependencies {
    testImplementation libs.junit5
    testImplementation 'org.assertj:assertj-core:3.21.0'
    testImplementation 'org.hamcrest:hamcrest-core:2.2'
}
